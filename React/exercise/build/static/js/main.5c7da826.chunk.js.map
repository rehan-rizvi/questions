{"version":3,"sources":["config/index.js","utils/api-communicator.js","utils/response-formatter.js","modules/todo/service.js","modules/todo/view/style.js","modules/todo/view/index.js","modules/todo/index.js","modules/index.js","reportWebVitals.js","index.js"],"names":["config","apiBaseUrl","apiInstance","axios","create","baseURL","timeout","headers","Accept","responseFormatter","api","a","defaultMessage","response","data","status","error","message","query","get","useStyles","makeStyles","theme","todoWrapper","display","flexDirection","alignItems","paperRoot","padding","margin","height","maxHeight","width","overflow","background","red","color","todoCompleted","green","todoTitleWrapper","marginTop","todoTitleText","fontFamily","todoTitleLabel","fontWeight","defautState","todos","isLoading","TodoView","classes","useState","state","setState","fetchTodos","prevState","Service","useEffect","className","Typography","variant","appTitle","map","todo","Paper","elevation","root","clsx","completed","Chip","label","id","component","title","TodoModule","match","exact","path","View","App","to","render","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c7da826.chunk.js","sourcesContent":["const config = {\n  apiBaseUrl: 'https://jsonplaceholder.typicode.com',\n}\n\nexport default config;","import axios from 'axios';\nimport config from '../config';\n\nconst apiInstance = axios.create({\n  baseURL: config.apiBaseUrl,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  }\n});\n\nexport default apiInstance;","const responseFormatter = async (\n  api,\n  defaultMessage = 'Opps! something went wrong, Pplease contact to admin.'\n) => {\n  try {\n    const { data: response, status, ...request } = await api;\n\n    if (status === 202 && response.error) {\n      throw response;\n    }\n\n    return {\n      data: response,\n      message: response.message,\n      error: null\n    }\n  } catch (error) {\n    return {\n      data: null,\n      message: null,\n      error: error.message || defaultMessage\n    }\n  }\n};\n\nexport default responseFormatter;","import { apiCommunicator as api, responseFormatter } from \"../../utils\";\n\nconst get = (query = '') => {\n  return responseFormatter(\n    api.get(`todos/${query}`)\n  )\n};\n\nexport default {\n  get\n}","import makeStyles from \"@mui/styles/makeStyles\";\nimport green from \"@mui/material/colors/green\";\nimport red from \"@mui/material/colors/red\";\n\n\nconst useStyles = makeStyles(theme => ({\n  todoWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  paperRoot: {\n    padding: 16,\n    margin: 16,\n    height: 100,\n    maxHeight: 100,\n    width: '50%',\n    overflow: 'auto',\n    background: `${red[50]} !important`,\n    color: `${red[900]} !important`,\n  },\n  todoCompleted: {\n    background: `${green[50]} !important`,\n    color: `${green[900]} !important`,\n  },\n  todoTitleWrapper: {\n    marginTop: 8,\n  },\n  todoTitleText: {\n    fontFamily: 'Sora, sans-serif !important',\n  },\n  todoTitleLabel: {\n    fontFamily: 'Sora, sans-serif !important',\n    fontWeight: 'bold',\n  },\n}));\n\nexport default useStyles;","import { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport Service from '../service';\nimport useStyles from './style';\n\n\nconst defautState = {\n  todos: [],\n  isLoading: false,\n}\n\nconst TodoView = () => {\n  const classes = useStyles();\n  const [state, setState] = useState(defautState);\n\n  const fetchTodos = async () => {\n    setState(prevState => ({\n      ...prevState,\n      isLoading: true,\n    }));\n\n    const { data, error } = await Service.get();\n\n    setState(prevState => ({\n      ...prevState,\n      todos: error ? [] : data,\n      isLoading: false,\n    }));\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <div className={classes.todoWrapper}>\n      <Typography variant=\"h5\" className={classes.appTitle}>\n        TODOS\n      </Typography>\n      {state.todos.map(todo => (\n        <Paper\n          elevation={4}\n          classes={{\n            root: clsx(classes.paperRoot, {\n              [classes.todoCompleted]: todo.completed,\n            })\n          }}\n        >\n          <Chip label={`ID: ${todo.id}`} variant='outlined' color={todo.completed ? 'success' : 'error'} />\n          <div className={classes.todoTitleWrapper}>\n            <Typography variant=\"body2\" className={classes.todoTitleText}>\n              <Typography variant=\"body1\" className={classes.todoTitleLabel} component='span'>\n                Title:{' '} \n              </Typography>\n              {todo.title}\n            </Typography>\n          </div>\n        </Paper>\n      ))}\n    </div>\n  );\n};\n\nexport default TodoView;","import { Switch, Route } from \"react-router-dom\";\nimport View from './view';\n\nconst TodoModule = ({ match }) => {\n  return (\n    <Switch>\n      <Route exact path={match.path} component={View} />\n    </Switch>\n  );\n};\n\nexport default TodoModule;\n","import {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport TodoModule from './todo';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path='/todo'\n          component={TodoModule}\n        />\n        <Route\n          exact\n          path='/'\n        >\n          <Redirect to='/todo' />\n        </Route>\n        <Route\n          render={() => <p>Opps! Something is not right, maybe you want to go to <a href='/'>Home</a></p>}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './modules';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}